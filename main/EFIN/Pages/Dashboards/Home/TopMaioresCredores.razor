
@inject Business.ContasAPagar.Interfaces.IDashBoardAPagarService dashboardAPagar

<div class="col col-12 col-md-4 col-lg-4">
    <BarChart TItem="decimal" @ref="barchart" @onclick="@(()=> { detalhar = !detalhar; })" />

    <RadzenPanel AllowCollapse="true" Collapsed="@(!detalhar)">
        <HeaderTemplate>
            <span>Top 10 maiores creadores</span>
        </HeaderTemplate>
        <ChildContent>
            <RadzenGrid TItem="SE2010"
                        AllowFiltering="true"
                        AllowSorting="true"
                        Data="@maioresCredores">
                <Columns>
                    <RadzenGridColumn TItem="SE2010" Title="Filial" Property="E2_FILIAL"></RadzenGridColumn>
                    <RadzenGridColumn TItem="SE2010" Title="Fornecedor" Property="E2_NOMFOR"></RadzenGridColumn>
                    <RadzenGridColumn TItem="SE2010" Title="Saldo" Property="E2_SALDO" FormatString="@("{0:0,0.00}")"></RadzenGridColumn>
                </Columns>
            </RadzenGrid>
        </ChildContent>
    </RadzenPanel>
</div>

@code {
    private IList<SE2010> maioresCredores;
    BarChart<decimal> barchart;
    private bool detalhar;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (maioresCredores == null)
            {
                maioresCredores = await dashboardAPagar.MaioresCredores();
            }



            this.StateHasChanged();
            await HandleWithCharts();
        }
    }


    private async Task HandleWithCharts()
    {

        string[] labelsMaioresDevedores = maioresCredores.Select(m => m.E2_NOMFOR).ToArray();
        List<decimal> dataMaioresDevedores = maioresCredores.Select(m => Convert.ToDecimal(m.E2_SALDO)).ToList();
        List<string> colorsMaioresDevedores = new List<string>();

        for (int i = 0; i < maioresCredores.Count; i++)
        {
            colorsMaioresDevedores.Add(ChartColor.FromRgba(255, 0, 0, 0.2f));
        }


        await barchart.Clear();

        await barchart.AddLabelsDatasetsAndUpdate(labelsMaioresDevedores, new BarChartDataset<decimal>()
        {

            Label = "Top 10 maiores creadores",
            Data = dataMaioresDevedores,
            BackgroundColor = colorsMaioresDevedores,
            BorderColor = colorsMaioresDevedores,
        });


    }
}
